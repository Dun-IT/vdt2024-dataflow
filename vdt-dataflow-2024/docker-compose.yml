version: '3.6'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
     - "2181:2181"
    container_name: vdt-zookeeper
    healthcheck:
      test: nc -z zookeeper 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  broker01:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      zookeeper:
        condition: service_healthy
    container_name: broker01
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT_HOST://broker01:9092,PLAINTEXT://broker01:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker01:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_JMX_PORT: 9090
      KAFKA_LOG_DIRS: /var/log/kafka
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
    volumes:
      - ./config/kafka_init/run_workaround.sh:/tmp/run_workaround.sh
    ports:
      - "9092:9092"
    healthcheck:
      test: nc -z broker01 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: vdt-kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      broker01:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: vdt-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker01:9093
      KAFKA_CLUSTERS_0_METRICS_PORT: 9090
    healthcheck:
      test: nc -z kafka-ui 8080 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  nifi:
    image: apache/nifi:latest
    container_name: vdt-nifi
    ports:
      - "8443:8443"
    environment:
      NIFI_WEB_HTTP_PORT: 8443
    volumes:
      - nifi_data:/opt/nifi/nifi-current/data

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: vdt-namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./hadoop_home:/home
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: vdt-datanode1
    restart: always
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:latest
    container_name: spark-master
    ports:
      - "8081:8080"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_MODE=master
    volumes:
      - ./spark_home:/home

  spark-worker:
    image: bde2020/spark-worker:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
    volumes:
      - ./spark_home:/home

volumes:
  nifi_data:
  hadoop_home:
  hadoop_namenode:
  hadoop_datanode1:
  spark_home: